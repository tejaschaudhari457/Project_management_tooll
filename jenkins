
1. What is Jenkins?

Jenkins is an open-source automation server used to automate software development processes like building, testing, and deployment. It supports Continuous Integration (CI) and Continuous Deployment (CD) workflows.

2. What are the key features of Jenkins?

Open-source and free to use

Supports CI/CD

Easy installation and configuration

Supports distributed builds with Master-Slave architecture

Large plugin ecosystem

Integration with various tools like Git, Docker, and Kubernetes

3. Explain CI/CD and how Jenkins fits into it.

Continuous Integration (CI): Automates code integration, ensuring frequent code commits and testing.

Continuous Deployment (CD): Automates code release and deployment.

Jenkins facilitates CI/CD by automating the build, test, and deployment pipeline.

4. How does Jenkins work?

Developers push code to a repository.

Jenkins pulls the latest code.

Jenkins executes build, test, and deployment steps.

Jenkins provides feedback on success or failure.

5. What are Jenkins jobs?

Jenkins jobs are automation tasks configured to execute build, test, and deployment processes.

6. What is the difference between a Freestyle job and a Pipeline job?

Freestyle Job: Simple configuration with UI, limited flexibility.

Pipeline Job: Defined using Jenkinsfile, supports complex workflows and automation.

7. How do you install Jenkins?

Download Jenkins from the official site.

Install Java (JDK 8 or later required).

Run java -jar jenkins.war or install via package managers.

8. What are the system requirements for Jenkins?

Java 8 or later

Minimum 256MB RAM (recommended 1GB+ for large projects)

Disk space based on project needs

9. What is the default port of Jenkins?

Jenkins runs on port 8080 by default.

10. How can you stop and restart Jenkins manually?

Stop: service jenkins stop or java -jar jenkins.war --stop

Start: service jenkins start or java -jar jenkins.war

Restart: service jenkins restart

11. Where is the Jenkins configuration stored?

Jenkins configurations are stored in the JENKINS_HOME directory (default: /var/lib/jenkins).

12. What is the Jenkins home directory?

It is the directory where Jenkins stores configurations, job data, and logs ($JENKINS_HOME).

13. What are the different ways to trigger a Jenkins job?

Manually via UI

Poll SCM

Webhook from GitHub

Scheduled jobs

API triggers

14. How can you schedule a job in Jenkins?

Using Build Triggers, such as CRON expressions (H * * * * for every hour).

15. What are Jenkins Plugins?

Extensions that add functionalities like Git, Docker, and Slack integration.

16. How do you install and manage plugins in Jenkins?

Go to Manage Jenkins > Manage Plugins.

Install plugins via the UI or CLI.

17. What are the important plugins in Jenkins?

Git Plugin

Pipeline Plugin

Blue Ocean

Docker Plugin

Credentials Plugin

18. What is a Jenkinsfile?

A Jenkinsfile is a script defining a Jenkins Pipeline using Groovy.

19. What is the difference between Declarative and Scripted Pipelines?

Declarative: Simple, structured syntax (pipeline block).

Scripted: More flexible, uses Groovy scripts.

20. How do you configure Jenkins to pull code from GitHub?

Install Git plugin.

Provide repository URL in job configuration.

Use webhook triggers.

Intermediate Jenkins Interview Questions

21. What is the difference between a Master and a Slave in Jenkins?

Master: Controls job execution and resource allocation.

Slave: Executes jobs assigned by the master.

22. How do you configure a Jenkins agent (slave)?

Use SSH connection or JNLP.

Configure under Manage Nodes and Clouds.

23. What is the role of the Jenkins workspace directory?

It stores job-specific build files and artifacts.

24. How can you integrate Jenkins with Docker?

Install Docker Plugin.

Use Docker to build, test, and deploy applications.

25. What is the difference between Pipeline and Multibranch Pipeline?

Pipeline: Fixed Jenkinsfile for all branches.

Multibranch Pipeline: Dynamically detects branches.

26. How do you create and run a simple Jenkins Pipeline?

Define Jenkinsfile.

Create Pipeline job in Jenkins.

Run the job.

27. What are Jenkins environment variables?

System-defined or user-defined variables accessible in jobs.

28. How do you pass parameters to a Jenkins job?

Use Parameterized Build.

Define parameters in Jenkinsfile.

29. How do you configure email notifications in Jenkins?

Install Mailer Plugin.

Configure SMTP settings.

30. How do you set up a Jenkins build pipeline using the Blue Ocean plugin?

Install Blue Ocean Plugin.

Use New Pipeline to create.

31. How do you rollback a failed deployment in Jenkins?

Use git revert or rollback scripts in the pipeline.

32. How do you handle credentials securely in Jenkins?

Use the Credentials Plugin.

Store credentials securely and access them via environment variables.

33. What is the purpose of the post block in a Declarative Pipeline?

Executes steps after a pipeline stage (e.g., cleanup, notifications).

34. How do you configure Jenkins with Maven for a Java project?

Install Maven Integration Plugin.

Configure Maven path.

35. What is the role of Jenkins Shared Libraries?

Reusable pipeline scripts for multiple projects.

36. What is the difference between agent any and agent none in a Jenkinsfile?

agent any: Runs on any available node.

agent none: Used when defining stages explicitly.

37. How do you set up automated testing in Jenkins?

Use JUnit, Selenium, TestNG plugins.

Define testing steps in the pipeline.

38. How do you debug a failing Jenkins job?

Check logs ($JENKINS_HOME/logs).

Enable debug mode.

39. How do you back up and restore Jenkins?

Backup JENKINS_HOME.

Use Backup Plugin for automation.

40. What is the Jenkins CLI, and how do you use it?

Command-line tool for Jenkins management (jenkins-cli.jar).

Advanced Jenkins Interview Questions

41. How do you optimize Jenkins for large-scale deployments?

Use distributed builds.

Allocate resources efficiently.

42. What is Jenkins X? How is it different from traditional Jenkins?

Jenkins X is a cloud-native CI/CD solution for Kubernetes.

43. How do you integrate Jenkins with Kubernetes?

Install Kubernetes Plugin.

Use Jenkins X.

44. How can you implement RBAC (Role-Based Access Control) in Jenkins?

Use Matrix-based security.

Configure user roles.

45. How do you enable High Availability (HA) in Jenkins?

Use multiple masters.

Deploy Jenkins on Kubernetes.

46. How can Jenkins be used in a microservices architecture?

Use Docker, Kubernetes, and CI/CD pipelines.

47. How do you monitor Jenkins performance?

Use Monitoring Plugins.

48. How do you implement a dynamic agent in Jenkins?

Use Cloud agents like AWS, Kubernetes.

49. How do you perform a security audit in Jenkins?

Check Audit Logs.

Use security plugins.

50. How do you perform a security audit in Jenkins?

Review permissions and plugins.
